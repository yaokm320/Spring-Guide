<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置目标对象-->
    <bean id="target" class="com.example.aop.Target"></bean>

    <!--配置切面对象-->
    <bean id="myAspect" class="com.example.aop.MyAspect"></bean>

    <!--配置织入： 即告诉Spring哪些方法(切入点)需要什么样的通知（前置通知，后置通知。。。）-->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect ref="myAspect">

            <!--切点表达式抽取，方便被多次引用-->
            <aop:pointcut id="pointcut1" expression="execution(* com.example.aop.*.*(..))"/>

            <!-- 配置切面：包括切入点 + 通知 -->

            <!--前置通知-->
            <!--<aop:before method="before" pointcut="execution(public void com.example.aop.Target.save())"/>-->
            <aop:before method="before" pointcut="execution(* com.example.aop.*.*(..))"/>

            <!--下面的使用切点表达式抽取pointcut-ref-->
            <!--后置通知-->
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut1"/>

            <!--环绕通知-->
            <aop:around method="round" pointcut-ref="pointcut1"/>

            <!--异常抛出通知-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut1"/>

            <!--最终通知：无论是正常返回还是异常，都会执行该通知-->
            <aop:after method="after" pointcut-ref="pointcut1"/>

        </aop:aspect>
    </aop:config>
</beans>